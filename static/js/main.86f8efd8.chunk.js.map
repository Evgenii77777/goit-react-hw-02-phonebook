{"version":3,"sources":["redux/contactsAction.js","redux/contactsSelectors.js","components/contacts/contactsForm/ContactsForm.js","components/contacts/contactsList/ContactsList.js","components/contacts/contactsFilter/ContactsFilter.js","components/contacts/Contacts.js","redux/contactsOperations.js","components/App.js","redux/contactsReduser.js","redux/store.js","index.js"],"names":["getAllContacts","createAction","addContact","deleteContact","getFiltered","setContactLoading","setError","resetError","getContactsSelector","state","items","errorSelector","error","isLoadingSelector","isContactLoading","filterSelector","filter","getFilterContacts","createSelector","contacts","contact","name","toLowerCase","includes","ContactsForm","number","onHandleChange","e","props","target","value","setState","onHandleSubmit","preventDefault","checkDublicateName","alert","onSubmit","this","onChange","type","pattern","title","required","Component","connect","ownProps","ContactsList","deleteClient","map","onClick","id","ContactsFilter","setFilter","Contacts","a","addContactOperation","deleteContactOperation","some","getAllContactOperation","isLoading","filteredContact","mapDispatchToProps","dispatch","axios","get","response","data","Object","keys","key","getState","post","console","dir","delete","App","itemsReducer","createReducer","_","payload","product","filterReducer","contactLoaderReducer","contactErrorReducer","contactsReduser","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86f8efd8.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getAllContacts = createAction(\"getAllContacts\");\r\nconst addContact = createAction(\"addContact\");\r\nconst deleteContact = createAction(\"deleteContact\");\r\nconst getFiltered = createAction(\"getFiltered\");\r\nconst setContactLoading = createAction(\"setContactLoading\");\r\nconst setError = createAction(\"setError\");\r\nconst resetError = createAction(\"resetError\");\r\n\r\nexport {\r\n  getAllContacts,\r\n  addContact,\r\n  deleteContact,\r\n  getFiltered,\r\n  setContactLoading,\r\n  setError,\r\n  resetError,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nconst getContactsSelector = (state) => state.items;\r\nconst errorSelector = (state) => state.error;\r\nconst isLoadingSelector = (state) => state.isContactLoading;\r\nconst filterSelector = (state) => state.filter;\r\nconst getFilterContacts = createSelector(\r\n  [getContactsSelector, filterSelector],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\nexport {\r\n  getContactsSelector,\r\n  errorSelector,\r\n  isLoadingSelector,\r\n  filterSelector,\r\n  getFilterContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetError } from \"../../../redux/contactsAction\";\r\nimport { errorSelector } from \"../../../redux/contactsSelectors\";\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  onHandleChange = (e) => {\r\n    this.props.error && this.props.resetError();\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.checkDublicateName(this.state.name)) {\r\n      alert(`${this.state.name} уже есть! `);\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input\r\n              onChange={this.onHandleChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number:\r\n            <input\r\n              onChange={this.onHandleChange}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    error: errorSelector(state),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { resetError })(ContactsForm);\r\n","import React from \"react\";\r\n\r\n\r\nconst ContactsList = ({ contacts, deleteClient }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        Contacts:\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            <p>{contact.name}</p>\r\n            <p>{contact.number}</p>\r\n            <button onClick={deleteClient} type=\"button\" id={contact.id}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\n\r\nconst ContactsFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input type=\"text\" value={filter} onChange={setFilter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import React, { Component } from \"react\";\r\nimport ContactsForm from \"./contactsForm/ContactsForm\";\r\nimport ContactsList from \"./contactsList/ContactsList\";\r\nimport ContactsFilter from \"./contactsFilter/ContactsFilter\";\r\nimport { getFiltered } from \"../../redux/contactsAction\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addContactOperation,\r\n  deleteContactOperation,\r\n  getAllContactOperation,\r\n} from \"../../redux/contactsOperations\";\r\nimport {\r\n  errorSelector,\r\n  getContactsSelector,\r\n  isLoadingSelector,\r\n  filterSelector,\r\n  getFilterContacts,\r\n} from \"../../redux/contactsSelectors\";\r\n\r\nclass Contacts extends Component {\r\n  async componentDidMount() {\r\n    this.props.getAllContactOperation();\r\n  }\r\n  addContact = async (contact) => {\r\n    this.props.addContactOperation(contact);\r\n  };\r\n\r\n  deleteContact = async (e) => {\r\n    const { id } = e.target;\r\n    this.props.deleteContactOperation(id);\r\n  };\r\n\r\n  setFilter = (e) => {\r\n    const { value } = e.target;\r\n    this.props.getFiltered(value);\r\n  };\r\n\r\n  checkDublicateName = (name) => {\r\n    return this.props.contacts.some((contact) => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.error && <h2>{this.props.error}</h2>}\r\n        {this.props.isLoading && <h2>Loading......</h2>}\r\n        <ContactsForm\r\n          addContact={this.addContact}\r\n          checkDublicateName={this.checkDublicateName}\r\n        />\r\n        <ContactsFilter filter={this.props.filter} setFilter={this.setFilter} />\r\n        <ContactsList\r\n          deleteContact={this.deleteContact}\r\n          contacts={this.props.filteredContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContactsSelector(state),\r\n  isLoading: isLoadingSelector(state),\r\n  error: errorSelector(state),\r\n  filter: filterSelector(state),\r\n  filteredContact: getFilterContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllContactOperation,\r\n  addContactOperation,\r\n  deleteContactOperation,\r\n  getFiltered,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import axios from \"axios\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getAllContacts,\r\n  setContactLoading,\r\n  setError,\r\n} from \"./contactsAction\";\r\nimport { getContactsSelector } from \"./contactsSelectors\";\r\n\r\nconst addContactOperation = (contact) => async (dispatch, getState) => {\r\n  // const contacts = getContactsSelector(getState);\r\n  // if (contacts.some((item) => item.name.toLowerCase().includes(contact.name.toLowerCase()))) {\r\n  //   dispatch(setError(\"Такой контакт уже есть\"));\r\n  //   return;\r\n  // }\r\n  dispatch(setContactLoading());\r\n  try {\r\n    const response = await axios.post(\r\n      `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts.json`,\r\n      contact\r\n    );\r\n    dispatch(addContact({ ...contact, id: response.data.name }));\r\n  } catch (error) {\r\n    console.dir(error);\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setContactLoading());\r\n  }\r\n};\r\n\r\nconst deleteContactOperation = (id) => async (dispatch) => {\r\n  dispatch(setContactLoading());\r\n  try {\r\n    await axios.delete(\r\n      `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n    );\r\n    dispatch(deleteContact(id));\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setContactLoading());\r\n  }\r\n};\r\n\r\nconst getAllContactOperation = (id) => async (dispatch) => {\r\n  dispatch(setContactLoading());\r\n  try {\r\n    const response = await axios.get(\r\n      `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts.json`\r\n    );\r\n\r\n    if (response.data) {\r\n      const contacts = Object.keys(response.data).map((key) => ({\r\n        ...response.data[key],\r\n        id: key,\r\n      }));\r\n      dispatch(getAllContacts(contacts));\r\n    } else return;\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setContactLoading());\r\n  }\r\n};\r\n\r\nexport { addContactOperation, deleteContactOperation, getAllContactOperation };\r\n","import React from \"react\";\r\nimport Contacts from \"./contacts/Contacts\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Contacts />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getFiltered,\r\n  getAllContacts,\r\n  setContactLoading,\r\n  setError,\r\n  resetError,\r\n} from \"./contactsAction\";\r\n\r\nexport const itemsReducer = createReducer([], {\r\n  [getAllContacts]: (_, { payload }) => payload,\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => [\r\n    ...state.filter((product) => product.id !== payload),\r\n  ],\r\n});\r\nexport const filterReducer = createReducer(\"\", {\r\n  [getFiltered]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactLoaderReducer = createReducer(false, {\r\n  [setContactLoading]: (state) => !state,\r\n});\r\n\r\nexport const contactErrorReducer = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nexport const contactsReduser = combineReducers({\r\n  items: itemsReducer,\r\n  isContactLoading: contactLoaderReducer,\r\n  error: contactErrorReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { contactsReduser } from \"./contactsReduser\";\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReduser,\r\n  middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}