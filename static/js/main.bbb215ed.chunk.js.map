{"version":3,"sources":["components/contacts/contactsForm/ContactsForm.js","components/contacts/contactsList/ContactsList.js","components/contacts/contactsFilter/ContactsFilter.js","components/contacts/Contacts.js","components/App.js","index.js"],"names":["ContactsForm","state","name","number","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","checkDublicateName","alert","addContact","onSubmit","this","onChange","type","pattern","title","required","Component","ContactsList","contacts","deleteClient","map","contact","onClick","id","ContactsFilter","filter","setFilter","Contacts","a","axios","post","response","prev","data","console","log","delete","getFilteredClients","toLowerCase","includes","toLocaleLowerCase","some","get","Object","keys","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbb215ed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.checkDublicateName(this.state.name)) {\r\n      alert(`${this.state.name} уже есть! `);\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input\r\n              onChange={this.onHandleChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number:\r\n            <input\r\n              onChange={this.onHandleChange}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import React from \"react\";\r\n\r\n\r\nconst ContactsList = ({ contacts, deleteClient }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        Contacts:\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            <p>{contact.name}</p>\r\n            <p>{contact.number}</p>\r\n            <button onClick={deleteClient} type=\"button\" id={contact.id}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\n\r\nconst ContactsFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input type=\"text\" value={filter} onChange={setFilter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import React, { Component } from \"react\";\r\nimport ContactsForm from \"./contactsForm/ContactsForm\";\r\nimport ContactsList from \"./contactsList/ContactsList\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\nimport ContactsFilter from \"./contactsFilter/ContactsFilter\";\r\nimport axios from \"axios\";\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts.json`\r\n      );\r\n\r\n      if (response.data) {\r\n        const contacts = Object.keys(response.data).map((key) => ({\r\n          ...response.data[key],\r\n          id: key,\r\n        }));\r\n        this.setState({ contacts });\r\n      } else return;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  addContact = async (contact) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts.json`,\r\n        contact\r\n      );\r\n      this.setState((prev) => {\r\n        return {\r\n          contacts: [...prev.contacts, { ...contact, id: response.data.name }],\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteClient = async (e) => {\r\n    const { id } = e.target;\r\n    try {\r\n      await axios.delete(\r\n        `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n      );\r\n      this.setState({\r\n        contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  setFilter = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ filter: value });\r\n  };\r\n  getFilteredClients = () => {\r\n    return this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLocaleLowerCase())\r\n    );\r\n  };\r\n  checkDublicateName = (name) => {\r\n    return this.state.contacts.some((contact) => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContactsForm\r\n          addContact={this.addContact}\r\n          checkDublicateName={this.checkDublicateName}\r\n        />\r\n        <ContactsFilter filter={this.state.filter} setFilter={this.setFilter} />\r\n        <ContactsList\r\n          contacts={this.state.contacts}\r\n          deleteClient={this.deleteClient}\r\n          contacts={this.getFilteredClients()}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport Contacts from \"./contacts/Contacts\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Contacts />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}