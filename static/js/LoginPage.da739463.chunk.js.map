{"version":3,"sources":["redux/auth/authOperations.js","components/auth/validator/validator.js","components/auth/AuthForm.js","pages/loginPage.js"],"names":["key","schema","yup","shape","email","required","password","min","max","AuthForm","state","this","props","location","pathname","initialValues","validationSchema","onSubmit","values","registerOperation","loginOperation","isSubmitting","type","name","component","Button","disabled","variant","color","Component","connect","user","dispatch","a","registerRequest","axios","post","returnSecureToken","data","registerSuccess","registerError","response","error","message","loginRequest","loginSuccess","loginError","withRouter","loginPage"],"mappings":"mQASMA,EAAM,0C,kBCMGC,EAbFC,MAAaC,MAAM,CAC9BC,MAAOF,MAAaE,QAAQC,WAE5BC,SAAUJ,IACA,eACPG,SAAS,oBACTE,IAAI,EAAG,UACPC,IAAI,GAAI,Y,eCEPC,E,4MACJC,MAAQ,G,4CACR,WAAU,IAAD,OACP,OACE,mCACE,gCACE,6BACoC,cAAjCC,KAAKC,MAAMC,SAASC,SACjB,eACA,UAEN,cAAC,IAAD,CACEC,cAAe,CAAEX,MAAO,GAAIE,SAAU,IACtCU,iBAAkBf,EAClBgB,SAAU,SAACC,GACwB,cAAjC,EAAKN,MAAMC,SAASC,SAChB,EAAKF,MAAMO,kBAAkBD,GAC7B,EAAKN,MAAMQ,eAAeF,IANlC,SASG,gBAAGG,EAAH,EAAGA,aAAH,OACC,eAAC,IAAD,mBAEE,cAAC,IAAD,CAAOC,KAAK,QAAQC,KAAK,UACzB,cAAC,IAAD,CAAcA,KAAK,QAAQC,UAAU,QAHvC,WAKE,cAAC,IAAD,CAAOF,KAAK,WAAWC,KAAK,aAC5B,cAAC,IAAD,CAAcA,KAAK,WAAWC,UAAU,QAIxC,cAACC,EAAA,EAAD,CACEH,KAAK,SACLI,SAAUL,EACVM,QAAQ,WACRC,MAAM,UAJR,SAMoC,cAAjC,EAAKhB,MAAMC,SAASC,SACjB,eACA,yB,GAvCCe,aAkDRC,gBAAQ,KAAM,CAAEX,kBFlDL,SAACY,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,6DAClCD,EAASE,eADyB,kBAGTC,IAAMC,KAAN,wEAC4CpC,GAD5C,2BAEhB+B,GAFgB,IAEVM,mBAAmB,KALA,gBAGxBC,EAHwB,EAGxBA,KAIRN,EAASO,YAAgBD,IAPO,gDAShCN,EAASQ,YAAc,KAAMC,SAASH,KAAKI,MAAMC,UATjB,yDAAV,uDEkDwBvB,eFrC3B,SAACW,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,6DAC/BD,EAASY,eADsB,kBAGNT,IAAMC,KAAN,oFACwDpC,GADxD,2BAEhB+B,GAFgB,IAEVM,mBAAmB,KALH,gBAGrBC,EAHqB,EAGrBA,KAIRN,EAASa,YAAaP,IAPO,gDAS7BN,EAASc,YAAW,KAAML,SAASH,KAAKI,MAAMC,UATjB,yDAAV,wDEqCRb,CACbiB,YAAWtC,K,iCC9Db,gCAWeuC,UARG,WAChB,OACE,mCACA,cAAC,IAAD","file":"static/js/LoginPage.da739463.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n} from \"./authActions\";\r\nconst key = \"AIzaSyADWi5F5f_L0cqoFfx2pFlizjHEymIWILM\";\r\n// const key = process.env.REACT_APP_API_KEY;\r\nconst registerOperation = (user) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const { data } = await axios.post(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${key}`,\r\n      { ...user, returnSecureToken: true }\r\n    );\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.response.data.error.message));\r\n  }\r\n};\r\n\r\nconst loginOperation = (user) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const { data } = await axios.post(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${key}`,\r\n      { ...user, returnSecureToken: true }\r\n    );\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.response.data.error.message));\r\n  }\r\n};\r\n\r\nexport { registerOperation, loginOperation };\r\n","import * as yup from \"yup\";\r\n\r\nlet schema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n\r\n  password: yup\r\n    .string(\"Need string\")\r\n    .required(\"Vvedite password\")\r\n    .min(6, \"min 6 \")\r\n    .max(12, \"max 12\"),\r\n  // .matches(\r\n  //   /^(?=.*[0-9a-zA-Z!@#$%^&*]{6,})$/,\r\n  //   \"Только такие символы : 0-9a-zA-Z!@#$%^&*\"\r\n  // ),\r\n});\r\nexport default schema;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  loginOperation,\r\n  registerOperation,\r\n} from \"../../redux/auth/authOperations\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport schema from \"./validator/validator\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass AuthForm extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>\r\n            {this.props.location.pathname === \"/register\"\r\n              ? \"Registration\"\r\n              : \"Login\"}\r\n          </h1>\r\n          <Formik\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validationSchema={schema}\r\n            onSubmit={(values) => {\r\n              this.props.location.pathname === \"/register\"\r\n                ? this.props.registerOperation(values)\r\n                : this.props.loginOperation(values);\r\n            }}\r\n          >\r\n            {({ isSubmitting }) => (\r\n              <Form>\r\n                Email\r\n                <Field type=\"email\" name=\"email\" />\r\n                <ErrorMessage name=\"email\" component=\"div\" />\r\n                Password\r\n                <Field type=\"password\" name=\"password\" />\r\n                <ErrorMessage name=\"password\" component=\"div\" />\r\n                {/* <button type=\"submit\" disabled={isSubmitting}>\r\n                  Submit\r\n                </button> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                >\r\n                  {this.props.location.pathname === \"/register\"\r\n                    ? \"Registration\"\r\n                    : \"Login\"}\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { registerOperation, loginOperation })(\r\n  withRouter(AuthForm)\r\n);\r\n","import React from 'react';\r\nimport AuthForm from '../components/auth/AuthForm';\r\n\r\nconst loginPage = () => {\r\n  return (\r\n    <>\r\n    <AuthForm/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default loginPage;"],"sourceRoot":""}