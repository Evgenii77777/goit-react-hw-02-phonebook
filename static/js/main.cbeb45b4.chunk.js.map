{"version":3,"sources":["components/contacts/contactsForm/ContactsForm.js","components/contacts/contactsList/ContactsList.js","components/contacts/contactsFilter/ContactsFilter.js","redux/contactsAction.js","components/contacts/Contacts.js","components/App.js","redux/contactsReduser.js","redux/store.js","index.js"],"names":["ContactsForm","state","name","number","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","checkDublicateName","alert","addContact","onSubmit","this","onChange","type","pattern","title","required","Component","ContactsList","contacts","deleteClient","map","contact","onClick","id","ContactsFilter","filter","setFilter","getAllContacts","createAction","deleteContact","getFiltered","Contacts","a","axios","post","response","data","delete","getFilteredContacts","toLowerCase","includes","toLocaleLowerCase","some","get","Object","keys","key","console","log","connect","dispatch","App","contactsReduser","createReducer","_","payload","product","filterReducer","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbeb45b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.checkDublicateName(this.state.name)) {\r\n      alert(`${this.state.name} уже есть! `);\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input\r\n              onChange={this.onHandleChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number:\r\n            <input\r\n              onChange={this.onHandleChange}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import React from \"react\";\r\n\r\n\r\nconst ContactsList = ({ contacts, deleteClient }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        Contacts:\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            <p>{contact.name}</p>\r\n            <p>{contact.number}</p>\r\n            <button onClick={deleteClient} type=\"button\" id={contact.id}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\n\r\nconst ContactsFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input type=\"text\" value={filter} onChange={setFilter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllContacts = createAction(\"getAllContacts\");\r\nexport const addContact = createAction(\"addContact\");\r\nexport const deleteContact = createAction(\"deleteContact\");\r\nexport const getFiltered = createAction(\"getFiltered\");\r\n","import React, { Component } from \"react\";\r\nimport ContactsForm from \"./contactsForm/ContactsForm\";\r\nimport ContactsList from \"./contactsList/ContactsList\";\r\nimport ContactsFilter from \"./contactsFilter/ContactsFilter\";\r\nimport axios from \"axios\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getFiltered,\r\n  getAllContacts,\r\n} from \"../../redux/contactsAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Contacts extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts.json`\r\n      );\r\n\r\n      if (response.data) {\r\n        const contacts = Object.keys(response.data).map((key) => ({\r\n          ...response.data[key],\r\n          id: key,\r\n        }));\r\n        // this.setState({ contacts });\r\n        this.props.getAllContacts(contacts);\r\n      } else return;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  addContact = async (contact) => {\r\n    const response = await axios.post(\r\n      `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts.json`,\r\n      contact\r\n    );\r\n    this.props.addContact({ ...contact, id: response.data.name });\r\n    //   this.setState((prev) => {\r\n    //     return {\r\n    //       contacts: [...prev.contacts, { ...contact, id: response.data.name }],\r\n    //     };\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n  };\r\n\r\n  deleteContact = async (e) => {\r\n    const { id } = e.target;\r\n\r\n    await axios.delete(\r\n      `https://phonebook-e3785-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n    );\r\n    this.props.deleteContact(id);\r\n    //   this.setState({\r\n    //     contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n  };\r\n\r\n  setFilter = (e) => {\r\n    const { value } = e.target;\r\n    this.props.getFiltered(value);\r\n  };\r\n  getFilteredContacts = () => {\r\n    return this.props.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(this.props.filter.toLocaleLowerCase())\r\n    );\r\n  };\r\n  checkDublicateName = (name) => {\r\n    return this.props.contacts.some((contact) => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContactsForm\r\n          addContact={this.addContact}\r\n          checkDublicateName={this.checkDublicateName}\r\n        />\r\n        <ContactsFilter filter={this.props.filter} setFilter={this.setFilter} />\r\n        <ContactsList\r\n          contacts={this.props.contacts}\r\n          deleteClient={this.deleteContact}\r\n          contacts={this.getFilteredContacts()}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n    filter: state.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllContacts: (contacts) => {\r\n      dispatch(getAllContacts(contacts));\r\n    },\r\n    addContact: (contacts) => {\r\n      dispatch(addContact(contacts));\r\n    },\r\n    deleteContact: (contacts) => {\r\n      dispatch(deleteContact(contacts));\r\n    },\r\n    getFiltered: (contacts) => {\r\n      dispatch(getFiltered(contacts));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from \"react\";\r\nimport Contacts from \"./contacts/Contacts\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Contacts />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getFiltered,\r\n  getAllContacts,\r\n} from \"./contactsAction\";\r\n\r\nexport const contactsReduser = createReducer([], {\r\n  [getAllContacts]: (_, { payload }) => payload,\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => [\r\n    ...state.filter((product) => product.id !== payload),\r\n  ],\r\n});\r\nexport const filterReducer = createReducer(\"\", {\r\n  [getFiltered]: (_, { payload }) => payload,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contactsReduser, filterReducer } from \"./contactsReduser\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReduser,\r\n  filter: filterReducer,\r\n});\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}