{"version":3,"sources":["redux/contactsAction.js","routes/mainRoutes.js","components/userMenu/NavigationItem.js","components/userMenu/UserMenu.js","components/userMenu/Navigation.js","components/header/Header.js","routes/PrivateRoutes.js","routes/PublicRoutes.js","components/main/Main.js","components/App.js","redux/auth/authReducer.js","redux/contactsReduser.js","redux/store.js","index.js","redux/auth/authActions.js"],"names":["getAllContacts","createAction","addContact","deleteContact","getFiltered","setContactLoading","setError","resetError","mainRoutes","name","path","exact","component","lazy","isPrivate","isRestricted","NavigationItem","item","location","isAuth","className","to","pathname","state","from","activeClassName","UserMenu","logOut","email","Button","onClick","variant","color","connect","ownProps","auth","token","idToken","withRouter","map","Header","PrivateRoute","PublicRoute","fallback","key","App","tokenReducer","createReducer","registerSuccess","_","payload","loginSuccess","loaderReducer","registerRequest","registerError","loginRequest","loginError","errorReducer","authReducer","combineReducers","isloading","error","itemsReducer","filter","product","id","filterReducer","contactLoaderReducer","contactErrorReducer","contactsReduser","items","isContactLoading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","storage","whitelist","rootReducer","contacts","persistReducer","store","configureStore","reducer","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e1ef0ec.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getAllContacts = createAction(\"getAllContacts\");\r\nconst addContact = createAction(\"addContact\");\r\nconst deleteContact = createAction(\"deleteContact\");\r\nconst getFiltered = createAction(\"getFiltered\");\r\nconst setContactLoading = createAction(\"setContactLoading\");\r\nconst setError = createAction(\"setError\");\r\nconst resetError = createAction(\"resetError\");\r\n\r\nexport {\r\n  getAllContacts,\r\n  addContact,\r\n  deleteContact,\r\n  getFiltered,\r\n  setContactLoading,\r\n  setError,\r\n  resetError,\r\n};\r\n","import { lazy } from \"react\";\r\n\r\nconst mainRoutes = [\r\n  {\r\n    name: \"Home\",\r\n    path: \"/\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/homePage\" /*webpackChunkName:'HomePage'*/)\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: false,\r\n  },\r\n  {\r\n    name: \"Contacts\",\r\n    path: \"/contacts\",\r\n    exact: false,\r\n    component: lazy(() =>\r\n      import(\r\n        \"../components/contacts/Contacts\" /*webpackChunkName:'ContactsPage'*/\r\n      )\r\n    ),\r\n    isPrivate: true,\r\n    isRestricted: false,\r\n  },\r\n  {\r\n    name: \"Registration\",\r\n    path: \"/register\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/registerPage\" /*webpackChunkName:'RegistrationPage'*/)\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n  {\r\n    name: \"Login\",\r\n    path: \"/login\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/loginPage\" /*webpackChunkName:'LoginPage'*/)\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n];\r\nexport default mainRoutes;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavigationItem = ({ item, location, isAuth }) => {\r\n  return (\r\n    <>\r\n      {!item.isPrivate && !item.isRestricted && (\r\n        <li className=\"listItem\">\r\n          <NavLink\r\n            to={{\r\n              pathname: item.path,\r\n              state: { from: location.pathname },\r\n            }}\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n            exact={item.exact}\r\n          >\r\n            {item.name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {isAuth && item.isPrivate && !item.isRestricted && (\r\n        <li className=\"listItem\">\r\n          <NavLink\r\n            to={{\r\n              pathname: item.path,\r\n              state: { from: location.pathname },\r\n            }}\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n            exact={item.exact}\r\n          >\r\n            {item.name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {!isAuth && !item.isPrivate && item.isRestricted && (\r\n        <li>\r\n          <NavLink\r\n            to={{\r\n              pathname: item.path,\r\n              state: { from: location.pathname },\r\n            }}\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n            exact={item.exact}\r\n          >\r\n            {item.name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst UserMenu = ({ logOut, email }) => {\r\n  return (\r\n    <>\r\n      <span>Welcome {email} </span>\r\n\r\n      <Button onClick={() => logOut()} variant=\"outlined\" color=\"primary\">\r\n        LogOut\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { logOut } from \"../../redux/auth/authActions\";\r\nimport mainRoutes from \"../../routes/mainRoutes\";\r\nimport NavigationItem from \"./NavigationItem\";\r\nimport UserMenu from \"./UserMenu\";\r\nconst Navigation = ({ location, isAuth, logOut, email }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {mainRoutes.map((item) => (\r\n          <NavigationItem\r\n            item={item}\r\n            isAuth={isAuth}\r\n            location={location}\r\n            key={item.path}\r\n          />\r\n        ))}\r\n        {isAuth && <UserMenu logOut={logOut} email={email} />}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isAuth: state.auth.token.idToken,\r\n    email: state.auth.token.email,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { logOut })(withRouter(Navigation));\r\n","import React from \"react\";\r\nimport Navigation from \"../userMenu/Navigation\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Navigation />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PrivateRoute = ({ path, exact, component, isAuth }) => {\r\n  return isAuth ? (\r\n    <Route path={path} exact={exact} component={component} />\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PublicRoute = ({ path, exact, component, isAuth, isRestricted }) => {\r\n  return isAuth && isRestricted ? (\r\n    <Redirect to=\"/contacts\" />\r\n  ) : (\r\n    <Route path={path} exact={exact} component={component} />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch } from \"react-router\";\r\nimport mainRoutes from \"../../routes/mainRoutes\";\r\nimport PrivateRoute from \"../../routes/PrivateRoutes\";\r\nimport PublicRoute from \"../../routes/PublicRoutes\";\r\n\r\nconst Main = ({ isAuth }) => {\r\n  return (\r\n    <main>\r\n      <Suspense fallback={<h2>Loading...</h2>}>\r\n        <Switch>\r\n          {mainRoutes.map((item) =>\r\n            item.isPrivate ? (\r\n              <PrivateRoute {...item} key={item.path} isAuth={isAuth} />\r\n            ) : (\r\n              <PublicRoute {...item} key={item.path} isAuth={isAuth} />\r\n            )\r\n          )}\r\n        </Switch>\r\n      </Suspense>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isAuth: state.auth.token.idToken,\r\n    // email: state.auth.token.email,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport Main from \"./main/Main\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n  logOut,\r\n} from \"./authActions\";\r\n\r\nconst tokenReducer = createReducer(\r\n  {},\r\n  {\r\n    [registerSuccess]: (_, { payload }) => payload,\r\n    [loginSuccess]: (_, { payload }) => payload,\r\n    [logOut]: () => ({}),\r\n  }\r\n);\r\n\r\nconst loaderReducer = createReducer(false, {\r\n  [registerRequest]: (state) => !state,\r\n  [registerSuccess]: (state) => !state,\r\n  [registerError]: (state) => !state,\r\n  [loginRequest]: (state) => !state,\r\n  [loginSuccess]: (state) => !state,\r\n  [loginError]: (state) => !state,\r\n  [logOut]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(\"\", {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logOut]: () => \"\",\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  token: tokenReducer,\r\n  isloading: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default authReducer;\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getFiltered,\r\n  getAllContacts,\r\n  setContactLoading,\r\n  setError,\r\n  resetError,\r\n} from \"./contactsAction\";\r\n\r\nexport const itemsReducer = createReducer([], {\r\n  [getAllContacts]: (_, { payload }) => payload,\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => [\r\n    ...state.filter((product) => product.id !== payload),\r\n  ],\r\n});\r\nexport const filterReducer = createReducer(\"\", {\r\n  [getFiltered]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactLoaderReducer = createReducer(false, {\r\n  [setContactLoading]: (state) => !state,\r\n});\r\n\r\nexport const contactErrorReducer = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nexport const contactsReduser = combineReducers({\r\n  items: itemsReducer,\r\n  isContactLoading: contactLoaderReducer,\r\n  error: contactErrorReducer,\r\n  filter: filterReducer,\r\n});\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./auth/authReducer\";\r\nimport { contactsReduser } from \"./contactsReduser\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReduser,\r\n  auth: persistReducer(persistConfig, authReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\n\r\npersistStore(store);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logOut = createAction(\"auth/logOut\");\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logOut,\r\n};\r\n"],"sourceRoot":""}